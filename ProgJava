import java.util.HashMap;
import java.util.Scanner;

class Account {
    private String accountNumber;
    private String pin;
    private double balance;

    public Account(String accountNumber, String pin, double balance) {
        this.accountNumber = accountNumber;
        this.pin = pin;
        this.balance = balance;
    }

    public String getAccountNumber() {
        return accountNumber;
    }

    public String getPin() {
        return pin;
    }

    public double getBalance() {
        return balance;
    }

    public void deposit(double amount) {
        balance += amount;
    }

    public boolean withdraw(double amount) {
        if (amount <= balance) {
            balance -= amount;
            return true;
        } else {
            return false;
        }
    }
}

class ATM {
    private HashMap<String, Account> accounts = new HashMap<>();
    private Scanner scanner = new Scanner(System.in);
    private Account currentAccount;

    public ATM() {
        // Add some sample accounts for example
        accounts.put("2522523", new Account("2522523", "3493", 4432.0));
        accounts.put("6465348", new Account("6465348", "9335", 53234.0));
        accounts.put("3652224", new Account("3652224", "5365", 8432.0));
        accounts.put("5511245", new Account("5511245", "9335", 1455.0));
    }

    public void start() {
        System.out.println("Welcome to the ATM!");
        while (true) {
            System.out.print("Enter account number: ");
            String accountNumber = scanner.nextLine();
            System.out.print("Enter PIN: ");
            String pin = scanner.nextLine();

            if (authenticate(accountNumber, pin)) {
                System.out.println("Login successful!");
                showMenu();
            } else {
                System.out.println("Invalid account number or PIN. Try again.");
            }
        }
    }

    private boolean authenticate(String accountNumber, String pin) {
        Account account = accounts.get(accountNumber);
        if (account != null && account.getPin().equals(pin)) {
            currentAccount = account;
            return true;
        }
        return false;
    }

    private void showMenu() {
        while (true) {
            System.out.println("\nATM Menu:");
            System.out.println("1. View Balance");
            System.out.println("2. Deposit");
            System.out.println("3. Withdraw");
            System.out.println("4. Exit");
            System.out.print("Choose an option: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1 -> viewBalance();
                case 2 -> deposit();
                case 3 -> withdraw();
                case 4 -> {
                    System.out.println("Thank you for using the ATM. Goodbye!");
                    currentAccount = null;
                    return;
                }
                default -> System.out.println("Invalid option. Try again.");
            }
        }
    }

    private void viewBalance() {
        System.out.println("Current Balance: â‚¹" + currentAccount.getBalance());
    }

    private void deposit() {
        System.out.print("Enter deposit amount: ");
        double amount = scanner.nextDouble();
        currentAccount.deposit(amount);
        System.out.println("Deposit successful. New balance: $" + currentAccount.getBalance());
    }

    private void withdraw() {
        System.out.print("Enter withdrawal amount: ");
        double amount = scanner.nextDouble();
        if (currentAccount.withdraw(amount)) {
            System.out.println("Withdrawal successful. New balance: $" + currentAccount.getBalance());
        } else {
            System.out.println("Insufficient balance.");
        }
    }
}

public class ProgJava{
    public static void main(String[] args) {
        ATM atm = new ATM();
        atm.start();
    }
}
